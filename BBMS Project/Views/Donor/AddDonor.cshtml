@model BBMS_Project.Models.DonorModel

@{
    Layout = "~/Views/Shared/_User.cshtml";
}
@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <section class="section-content-block ">
        <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 margin-top-appointment-reverse">

            <div class="appointment-form-wrapper theme-custom-box-shadow text-center clearfix  ">
                <h3 class="text-center join-heading join-heading-alt">Registration</h3>
                <form class="appoinment-form">

                    <div class="form-group col-md-6">
                        @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Full Name", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6">
                        @Html.DropDownListFor(model => model.Gender, ViewBag.GenderName as SelectList, "Select gender", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter age", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.DropDownListFor(model => model.Bloodgroup, ViewBag.BloodGroupName as SelectList, "Select bloodgroup", new { @class = "form-control", @placeholder = "Select bloodgroup" })
                        @Html.ValidationMessageFor(model => model.Bloodgroup, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter email", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.EditorFor(model => model.Phoneno, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter contact number", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Phoneno, "", new { @class = "text-danger" })
                    </div>
                    @* <div class="form-group col-md-4">
            @Html.EditorFor(model => model.Pancardno, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter pan card number", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.Pancardno, "", new { @class = "text-danger" })
        </div>*@
                    <div class="form-group col-md-12">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter address", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.DropDownListFor(model => model.State, ViewBag.StateName as SelectList, "Select state", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.DropDownListFor(model => model.City, new SelectList(string.Empty, "Value", "Text"), "Select city", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter pincode", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group text-center col-md-12 col-sm-12 col-xs-12">
                        <input type="submit" value="Save" class="btn btn-default" style="border-radius:4px" />&nbsp;&nbsp;
                        <input type="reset" value="Cancel" class="btn btn-default" style="border-radius:4px" />
                    </div>






                    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
                    <script src="~/Scripts/jquery.validate.js"></script>
                    <script src="~/Scripts/jquery.validate.min.js"></script>
                    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
                    <script type="text/javascript">
        $(document).ready(function () {
          
            $("#State").change(function () {
               ;
                $("#City").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("cityList", "Donor")',
                    dataType: 'json',
                    data: { id: $("#State").val() },
                    success: function (City) {
                       
                        $.each(City, function (i, City) {
                            $("#City").append('<option value="'+ City.Value + '">'+ City.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        
                        alert(ex.StatusText);
                    }
                });
                return City;
            })
        });
                    </script>
                    @if (ViewBag.message != null)
                    {
                        <script type="text/javascript">
            $(function () {
                alert("@ViewBag.Message");
           document.location.href = '@Url.Action("DonorLogin", "Donor")';
        });
                        </script>
                    }
                </form>

            </div>
        </div>
    </section>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
