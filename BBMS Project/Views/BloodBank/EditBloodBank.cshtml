@model BBMS_Project.Models.BloodBankModel

@{
    Layout = "~/Views/Shared/_UTemp.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin-left: 750px; padding-top: 70px">
        <h4 style="padding-left:30px; padding-top:20px;margin-left:150px">Update BloodBank Details</h4>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.bloodbankid)
        @*<div class="form-group">
                @Html.LabelFor(model => model.bloodbankid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.bloodbankid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.bloodbankid, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group" style="width:500px">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="width:500px">
            @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="width:500px">
            @Html.LabelFor(model => model.phoneno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phoneno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phoneno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="width:500px">
            @Html.LabelFor(model => model.website, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.website, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.website, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="width:500px">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group" style="width:500px">
            @Html.LabelFor(model => model.statename, "State", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewBag.StateName != null)
                {
                    @Html.DropDownListFor(Model => Model.statename, ViewBag.StateName as SelectList, new { @class = "form-control" })
                }
                @Html.ValidationMessageFor(model => model.statename, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group" style="width:500px">
            @Html.LabelFor(model => model.cityname, "City", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("cityname", new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cityname, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group" style="width: 500px; margin-left: 170px">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>


        <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
        <script src="~/Scripts/jquery.validate.js"></script>
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery-3.4.1.min.js"></script>
        <script type="text/javascript">
        $(document).ready(function () {
           
            $("#statename").change(function () {
               
                $("#cityname").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("cityList", "BloodBank")',
                    dataType: 'json',
                    data: { id: $("#statename").val() },
                    success: function (City) {
                       
                        $.each(City, function (i, City) {
                            $("#cityname").append('<option value="'+ City.Value + '">'+ City.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                       
                        alert(ex.StatusText);
                    }
                });
                return City;
            })
        });




        </script>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
